stages:
  - build
  - push
  - test
  - deploy

variables:
  REGISTRY: "registry.gitlab.com"
  IMAGE_NAME: "$REGISTRY/Hsu-28/autoratecicd"
  DOCKER_DRIVER: overlay2

# Build stage
build_backend:
  stage: build
  script:
    - docker build -t $IMAGE_NAME/backend:latest ./back-end
  only:
    - master
    - master

build_frontend:
  stage: build
  script:
    - docker build -t $IMAGE_NAME/frontend:latest ./front-end
  only:
    - master

build_rateapi:
  stage: build
  script:
    - docker build -t $IMAGE_NAME/rateapi:latest ./rate-api
  only:
    - master

# Push stage
push_backend:
  stage: push
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
    - docker push $IMAGE_NAME/backend:latest
  only:
    - master

push_frontend:
  stage: push
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
    - docker push $IMAGE_NAME/frontend:latest
  only:
    - master

push_rateapi:
  stage: push
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $REGISTRY
    - docker push $IMAGE_NAME/rateapi:latest
  only:
    - master

# Test stage
test_services:
  stage: test
  script:
    # 啟動 SQL Server 容器
    - docker run -d \
        --name sqlserver \
        -e ACCEPT_EULA=Y \
        -e SA_PASSWORD=MyP@ssw0rd123! \
        -p 1433:1433 \
        --network mynetwork \
        mcr.microsoft.com/mssql/server:2019-latest
    
    # 啟動其他服務
    - docker-compose -f docker-compose.yml up -d
    - sleep 30  # 等待服務啟動
    
    # 在這裡添加你的測試命令
    # 例如，運行集成測試或 API 測試等
    - # 你的測試命令

    # 注意：這裡不再停止和刪除 SQL Server 容器，以便在後續步驟中使用
    - docker-compose -f docker-compose.yml down
  only:
    - master

# Deploy stage
deploy:
  stage: deploy
  script:
    - docker-compose -f docker-compose.yml up -d
  only:
    - master
